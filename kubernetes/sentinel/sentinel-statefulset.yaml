apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sentinel
  namespace: redis
spec:
  serviceName: sentinel
  replicas: 3
  selector:
    matchLabels:
      app: sentinel
  template:
    metadata:
      labels:
        app: sentinel
    spec:
      initContainers:
        - name: config
          image: redis:7.0.10-alpine
          command: ["sh", "-c"]
          args:
            - |
              REDIS_PASSWORD=admin
              nodes="redis-0.redis.redis.svc.cluster.local redis-1.redis.redis.svc.cluster.local redis-2.redis.redis.svc.cluster.local"

              for i in $nodes
              do
                  echo "Checking node: $i"
                  MASTER=$(redis-cli -h $i -p 6379 -a $REDIS_PASSWORD --no-auth-warning INFO replication | grep master_host | cut -d ":" -f2 | tr -d '\r')
                  if [ -n "$MASTER" ]; then
                      echo "Master found: $MASTER"
                      break
                  fi
              done

              if [ -z "$MASTER" ]; then
                echo "No master found. Exiting."
                exit 1
              fi

              echo "Generating sentinel.conf..."
              cat <<EOF > /etc/redis/sentinel.conf
              port 5000
              sentinel resolve-hostnames yes
              sentinel announce-hostnames yes
              sentinel monitor mymaster $MASTER 6379 2
              sentinel down-after-milliseconds mymaster 5000
              sentinel failover-timeout mymaster 60000
              sentinel parallel-syncs mymaster 1
              sentinel auth-pass mymaster $REDIS_PASSWORD
              EOF

              cat /etc/redis/sentinel.conf
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis/
      containers:
        - name: sentinel
          image: redis:7.0.10-alpine
          command: ["redis-sentinel"]
          args: ["/etc/redis/sentinel.conf"]
          ports:
            - containerPort: 5000
              name: sentinel
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis/
            - name: data
              mountPath: /data
      volumes:
        - name: redis-config
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "standard"
        resources:
          requests:
            storage: 64Mi
---
apiVersion: v1
kind: Service
metadata:
  name: sentinel
  namespace: redis
spec:
  clusterIP: None
  ports:
    - port: 5000
      targetPort: 5000
      name: sentinel
  selector:
    app: sentinel
